syntax = "proto3";

package bff.v1;

import "profile/v1/profile.proto";
import "feed/v1/feed.proto";
import "common/v1/common.proto";
import "auth/v1/auth.proto";

// "Backend for Frontend"
// This service is responsible for aggregating data from multiple services
// and returning it to the client in a format that is easy to consume.
service BffService {
  // Auth endpoints (directly proxied)
  rpc Register(auth.v1.RegisterRequest) returns (auth.v1.RegisterResponse);
  rpc Login(auth.v1.LoginRequest) returns (auth.v1.LoginResponse);
  rpc Logout(auth.v1.LogoutRequest) returns (auth.v1.LogoutResponse);

  // Aggregated endpoints
  rpc GetUserHomepage(GetUserHomepageRequest) returns (GetUserHomepageResponse);
  rpc GetProfilePage(GetProfilePageRequest) returns (GetProfilePageResponse);
}

message GetUserHomepageRequest {
  common.v1.UserId user_id = 1;
  common.v1.Pagination pagination = 2;
}

message GetUserHomepageResponse {
  // The shortened user profile, for use in the header
  profile.v1.MiniProfile miniProfile = 1;
  feed.v1.FeedResponse feed = 2;
}

message GetProfilePageRequest {
  common.v1.UserId user_id = 1;
}

message GetProfilePageResponse {
  // The full user profile
  profile.v1.Profile profile = 1;
  feed.v1.FeedResponse feed = 2;
}